apiVersion: apps/v1
kind: Deployment
metadata:
  name: fowergram-api
  labels:
    app: fowergram-api
spec:
  replicas: 1
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: fowergram-api
  template:
    metadata:
      labels:
        app: fowergram-api
    spec:
      serviceAccountName: fowergram-sa
      terminationGracePeriodSeconds: 60
      nodeSelector:
        cloud.google.com/gke-nodepool: cloudsql-pool
      containers:
        - name: fowergram-api
          image: asia-southeast1-docker.pkg.dev/fowergram-backend/fowergram-repo/api:latest
          ports:
            - containerPort: 8080
              name: http
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh", "-c", "sleep 10"]
          env:
            - name: DB_HOST
              value: "cloudsql-proxy"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: fowergram-secrets
                  key: db-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fowergram-secrets
                  key: db-password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: fowergram-secrets
                  key: db-name
            - name: DB_PORT
              value: "5432"
            - name: PORT
              value: "8080"
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              value: ""
            - name: GIN_MODE
              value: "release"
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi